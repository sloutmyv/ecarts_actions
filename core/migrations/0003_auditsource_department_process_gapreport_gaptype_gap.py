# Generated by Django 5.2.4 on 2025-08-02 04:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_remove_is_active_field'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('code', models.CharField(help_text="Code unique pour identifier l'élément", max_length=20, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la source')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('requires_process', models.BooleanField(default=False, help_text='Si coché, un processus sera obligatoire pour cette source', verbose_name='Nécessite un processus')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': "Source d'audit",
                'verbose_name_plural': "Sources d'audit",
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('code', models.CharField(help_text="Code unique pour identifier l'élément", max_length=20, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du département')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': 'Département',
                'verbose_name_plural': 'Départements',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('code', models.CharField(help_text="Code unique pour identifier l'élément", max_length=20, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du processus')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': 'Processus',
                'verbose_name_plural': 'Processus',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GapReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('source_reference', models.CharField(blank=True, help_text="Numéro d'audit, référence interne...", max_length=100, verbose_name='Référence source')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='Lieu')),
                ('observation_date', models.DateField(verbose_name="Date d'observation")),
                ('audit_source', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.auditsource', verbose_name="Source de l'audit")),
                ('declared_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='declared_gap_reports', to=settings.AUTH_USER_MODEL, verbose_name='Déclaré par')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.department', verbose_name='Service concerné')),
                ('involved_users', models.ManyToManyField(blank=True, related_name='involved_gap_reports', to=settings.AUTH_USER_MODEL, verbose_name='Autres utilisateurs impliqués')),
                ('process', models.ForeignKey(blank=True, help_text='Obligatoire uniquement pour les audits internes', null=True, on_delete=django.db.models.deletion.PROTECT, to='core.process', verbose_name='Processus SMI associé')),
            ],
            options={
                'verbose_name': "Déclaration d'écart",
                'verbose_name_plural': "Déclarations d'évenements",
                'ordering': ['-observation_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GapType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('code', models.CharField(help_text="Code unique pour identifier l'élément", max_length=20, unique=True, verbose_name='Code')),
                ('name', models.CharField(max_length=100, verbose_name="Nom du Type d'évenements")),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('audit_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gap_types', to='core.auditsource', verbose_name="Source d'audit")),
            ],
            options={
                'verbose_name': "Type d'évenements",
                'verbose_name_plural': "Types d'écart",
                'ordering': ['audit_source__name', 'name'],
                'unique_together': {('code', 'audit_source')},
            },
        ),
        migrations.CreateModel(
            name='Gap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('gap_number', models.CharField(help_text="Identifiant unique de l'écart (ex: EC-2024-0001)", max_length=20, unique=True, verbose_name="Numéro d'écart")),
                ('description', models.TextField(verbose_name='Pourquoi (justification/explication)')),
                ('status', models.CharField(choices=[('declared', 'Déclaré'), ('rejected', 'Non retenu'), ('closed', 'Clos')], default='declared', max_length=20, verbose_name='Statut')),
                ('gap_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gaps', to='core.gapreport', verbose_name="Déclaration d'écart")),
                ('gap_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.gaptype', verbose_name="Type d'évenements (Quoi)")),
            ],
            options={
                'verbose_name': 'Écart',
                'verbose_name_plural': 'Écarts',
                'ordering': ['-created_at'],
            },
        ),
    ]
