# Generated by Django 5.2.4 on 2025-08-01 07:01

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('code', models.CharField(help_text="Code unique pour identifier l'élément", max_length=20, unique=True, verbose_name='Code')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom du service')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sous_services', to='core.service', verbose_name='Service parent')),
            ],
            options={
                'verbose_name': '1. Service',
                'verbose_name_plural': '1. Services',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('matricule', models.CharField(help_text='Format: 1 lettre + 4 chiffres (ex: A1234)', max_length=5, unique=True, validators=[django.core.validators.RegexValidator(message='Le matricule doit contenir une lettre majuscule suivie de 4 chiffres (ex: A1234)', regex='^[A-Z][0-9]{4}$')], verbose_name='Matricule')),
                ('nom', models.CharField(max_length=50, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=50, verbose_name='Prénom')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('droits', models.CharField(choices=[('SA', 'Super Administrateur'), ('AD', 'Administrateur'), ('US', 'Utilisateur')], default='US', max_length=2, verbose_name="Droits d'accès")),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Membre du staff')),
                ('must_change_password', models.BooleanField(default=True, verbose_name='Doit changer le mot de passe')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='utilisateurs', to='core.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': '2. Utilisateur',
                'verbose_name_plural': '2. Utilisateurs',
                'ordering': ['nom', 'prenom'],
            },
        ),
    ]
